// <auto-generated />
using System;
using EcommerceWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcommerceWeb.Migrations
{
    [DbContext(typeof(QLBanValiContext))]
    partial class QLBanValiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EcommerceWeb.Models.TAnhChiTietSp", b =>
                {
                    b.Property<int>("MaChiTietSp")
                        .HasColumnType("int")
                        .HasColumnName("MaChiTietSP");

                    b.Property<string>("TenFileAnh")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Vitri")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MaChiTietSp", "TenFileAnh");

                    b.ToTable("tAnhChiTietSP", (string)null);
                });

            modelBuilder.Entity("EcommerceWeb.Models.TAnhSp", b =>
                {
                    b.Property<int>("MaSp")
                        .HasColumnType("int")
                        .HasColumnName("MaSP");

                    b.Property<string>("TenFileAnh")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Vitri")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MaSp", "TenFileAnh");

                    b.ToTable("tAnhSP", (string)null);
                });

            modelBuilder.Entity("EcommerceWeb.Models.TChatLieu", b =>
                {
                    b.Property<int>("MaChatLieu")
                        .HasColumnType("int");

                    b.Property<string>("ChatLieu")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MaChatLieu");

                    b.ToTable("tChatLieu", (string)null);
                });

            modelBuilder.Entity("EcommerceWeb.Models.TChiTietHdb", b =>
                {
                    b.Property<int>("MaHoaDon")
                        .HasColumnType("int");

                    b.Property<int>("MaChiTietSp")
                        .HasColumnType("int")
                        .HasColumnName("MaChiTietSP");

                    b.Property<string>("DonGiaBan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GiamGia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SoLuongBan")
                        .HasColumnType("int");

                    b.HasKey("MaHoaDon", "MaChiTietSp");

                    b.HasIndex("MaChiTietSp");

                    b.ToTable("tChiTietHDB", (string)null);
                });

            modelBuilder.Entity("EcommerceWeb.Models.TChiTietSanPham", b =>
                {
                    b.Property<int>("MaChiTietSp")
                        .HasColumnType("int")
                        .HasColumnName("MaChiTietSP");

                    b.Property<string>("AnhDaiDien")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("DonGiaBan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GiamGia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("MaKichThuoc")
                        .HasColumnType("int");

                    b.Property<int?>("MaMauSac")
                        .HasColumnType("int");

                    b.Property<int?>("MaSp")
                        .HasColumnType("int")
                        .HasColumnName("MaSP");

                    b.Property<string>("Slton")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SLTon");

                    b.Property<string>("Video")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MaChiTietSp");

                    b.HasIndex("MaMauSac");

                    b.HasIndex("MaSp");

                    b.ToTable("tChiTietSanPham", (string)null);
                });

            modelBuilder.Entity("EcommerceWeb.Models.TDanhMucSp", b =>
                {
                    b.Property<int>("MaSp")
                        .HasColumnType("int")
                        .HasColumnName("MaSP");

                    b.Property<string>("AnhDaiDien")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("CanNang")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ChietKhau")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DoNoi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GiaNhoNhat")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GiaiLonNhat")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GioiThieuSp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("GioiThieuSP");

                    b.Property<int?>("MaChatLieu")
                        .HasColumnType("int");

                    b.Property<string>("MaDacTinh")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("MaDt")
                        .HasColumnType("int")
                        .HasColumnName("MaDT");

                    b.Property<int?>("MaHangSx")
                        .HasColumnType("int")
                        .HasColumnName("MaHangSX");

                    b.Property<int?>("MaLoai")
                        .HasColumnType("int");

                    b.Property<int?>("MaNuocSx")
                        .HasColumnType("int")
                        .HasColumnName("MaNuocSX");

                    b.Property<string>("Model")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NganLaptop")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TenSp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TenSP");

                    b.Property<string>("ThoiGianBaoHanh")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Website")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MaSp");

                    b.HasIndex("MaChatLieu");

                    b.HasIndex("MaDt");

                    b.HasIndex("MaHangSx");

                    b.HasIndex("MaLoai");

                    b.HasIndex("MaNuocSx");

                    b.ToTable("tDanhMucSP", (string)null);
                });

            modelBuilder.Entity("EcommerceWeb.Models.THangSx", b =>
                {
                    b.Property<int>("MaHangSx")
                        .HasColumnType("int")
                        .HasColumnName("MaHangSX");

                    b.Property<string>("HangSx")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("HangSX");

                    b.Property<string>("MaNuocThuongHieu")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MaHangSx");

                    b.ToTable("tHangSX", (string)null);
                });

            modelBuilder.Entity("EcommerceWeb.Models.THoaDonBan", b =>
                {
                    b.Property<int>("MaHoaDon")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("GiamGiaHd")
                        .HasColumnType("int")
                        .HasColumnName("GiamGiaHD");

                    b.Property<int?>("MaKhachHang")
                        .HasColumnType("int");

                    b.Property<int?>("MaNhanVien")
                        .HasColumnType("int");

                    b.Property<string>("MaSoThue")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NgayHoaDon")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhuongThucThanhToan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ThongTinThue")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TongTienHd")
                        .HasColumnType("int")
                        .HasColumnName("TongTienHD");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("MaKhachHang");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("tHoaDonBan", (string)null);
                });

            modelBuilder.Entity("EcommerceWeb.Models.TKhachHang", b =>
                {
                    b.Property<int>("MaKhachHang")
                        .HasColumnType("int");

                    b.Property<string>("AnhDaiDien")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LoaiKhachHang")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NgaySinh")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TenKhachHang")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("MaKhachHang");

                    b.HasIndex("Username");

                    b.ToTable("tKhachHang", (string)null);
                });

            modelBuilder.Entity("EcommerceWeb.Models.TKichThuoc", b =>
                {
                    b.Property<int>("MaKichThuoc")
                        .HasColumnType("int");

                    b.Property<string>("KichThuoc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MaKichThuoc");

                    b.ToTable("tKichThuoc", (string)null);
                });

            modelBuilder.Entity("EcommerceWeb.Models.TLoaiDt", b =>
                {
                    b.Property<int>("MaDt")
                        .HasColumnType("int")
                        .HasColumnName("MaDT");

                    b.Property<string>("TenLoai")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MaDt");

                    b.ToTable("tLoaiDT", (string)null);
                });

            modelBuilder.Entity("EcommerceWeb.Models.TLoaiSp", b =>
                {
                    b.Property<int>("MaLoai")
                        .HasColumnType("int");

                    b.Property<string>("Loai")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MaLoai");

                    b.ToTable("tLoaiSP", (string)null);
                });

            modelBuilder.Entity("EcommerceWeb.Models.TMauSac", b =>
                {
                    b.Property<int>("MaMauSac")
                        .HasColumnType("int");

                    b.Property<string>("TenMauSac")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MaMauSac");

                    b.ToTable("tMauSac", (string)null);
                });

            modelBuilder.Entity("EcommerceWeb.Models.TNhanVien", b =>
                {
                    b.Property<int>("MaNhanVien")
                        .HasColumnType("int");

                    b.Property<string>("AnhDaiDien")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("ChucVu")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NgaySinh")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SoDienThoai1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SoDienThoai2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TenNhanVien")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("MaNhanVien");

                    b.HasIndex("Username");

                    b.ToTable("tNhanVien", (string)null);
                });

            modelBuilder.Entity("EcommerceWeb.Models.TQuocGium", b =>
                {
                    b.Property<int>("MaNuoc")
                        .HasColumnType("int");

                    b.Property<string>("TenNuoc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MaNuoc");

                    b.ToTable("tQuocGia", (string)null);
                });

            modelBuilder.Entity("EcommerceWeb.Models.TUser", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.Property<string>("LoaiUser")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.HasKey("Username");

                    b.ToTable("tUser", (string)null);
                });

            modelBuilder.Entity("EcommerceWeb.Models.TAnhChiTietSp", b =>
                {
                    b.HasOne("EcommerceWeb.Models.TChiTietSanPham", "MaChiTietSpNavigation")
                        .WithMany("TAnhChiTietSps")
                        .HasForeignKey("MaChiTietSp")
                        .IsRequired()
                        .HasConstraintName("FK_tAnhChiTietSP_tChiTietSanPham");

                    b.Navigation("MaChiTietSpNavigation");
                });

            modelBuilder.Entity("EcommerceWeb.Models.TAnhSp", b =>
                {
                    b.HasOne("EcommerceWeb.Models.TDanhMucSp", "MaSpNavigation")
                        .WithMany("TAnhSps")
                        .HasForeignKey("MaSp")
                        .IsRequired()
                        .HasConstraintName("FK_tAnhSP_tDanhMucSP");

                    b.Navigation("MaSpNavigation");
                });

            modelBuilder.Entity("EcommerceWeb.Models.TChiTietHdb", b =>
                {
                    b.HasOne("EcommerceWeb.Models.TChiTietSanPham", "MaChiTietSpNavigation")
                        .WithMany("TChiTietHdbs")
                        .HasForeignKey("MaChiTietSp")
                        .IsRequired()
                        .HasConstraintName("FK_tChiTietHDB_tChiTietSanPham");

                    b.HasOne("EcommerceWeb.Models.THoaDonBan", "MaHoaDonNavigation")
                        .WithMany("TChiTietHdbs")
                        .HasForeignKey("MaHoaDon")
                        .IsRequired()
                        .HasConstraintName("FK_tChiTietHDB_tHoaDonBan");

                    b.Navigation("MaChiTietSpNavigation");

                    b.Navigation("MaHoaDonNavigation");
                });

            modelBuilder.Entity("EcommerceWeb.Models.TChiTietSanPham", b =>
                {
                    b.HasOne("EcommerceWeb.Models.TKichThuoc", "MaMauSacNavigation")
                        .WithMany("TChiTietSanPhams")
                        .HasForeignKey("MaMauSac")
                        .HasConstraintName("FK_tChiTietSanPham_tKichThuoc");

                    b.HasOne("EcommerceWeb.Models.TMauSac", "MaMauSac1")
                        .WithMany("TChiTietSanPhams")
                        .HasForeignKey("MaMauSac")
                        .HasConstraintName("FK_tChiTietSanPham_tMauSac");

                    b.HasOne("EcommerceWeb.Models.TDanhMucSp", "MaSpNavigation")
                        .WithMany("TChiTietSanPhams")
                        .HasForeignKey("MaSp")
                        .HasConstraintName("FK_tChiTietSanPham_tDanhMucSP");

                    b.Navigation("MaMauSac1");

                    b.Navigation("MaMauSacNavigation");

                    b.Navigation("MaSpNavigation");
                });

            modelBuilder.Entity("EcommerceWeb.Models.TDanhMucSp", b =>
                {
                    b.HasOne("EcommerceWeb.Models.TChatLieu", "MaChatLieuNavigation")
                        .WithMany("TDanhMucSps")
                        .HasForeignKey("MaChatLieu")
                        .HasConstraintName("FK_tDanhMucSP_tChatLieu");

                    b.HasOne("EcommerceWeb.Models.TLoaiDt", "MaDtNavigation")
                        .WithMany("TDanhMucSps")
                        .HasForeignKey("MaDt")
                        .HasConstraintName("FK_tDanhMucSP_tLoaiDT");

                    b.HasOne("EcommerceWeb.Models.THangSx", "MaHangSxNavigation")
                        .WithMany("TDanhMucSps")
                        .HasForeignKey("MaHangSx")
                        .HasConstraintName("FK_tDanhMucSP_tHangSX");

                    b.HasOne("EcommerceWeb.Models.TLoaiSp", "MaLoaiNavigation")
                        .WithMany("TDanhMucSps")
                        .HasForeignKey("MaLoai")
                        .HasConstraintName("FK_tDanhMucSP_tLoaiSP");

                    b.HasOne("EcommerceWeb.Models.TQuocGium", "MaNuocSxNavigation")
                        .WithMany("TDanhMucSps")
                        .HasForeignKey("MaNuocSx")
                        .HasConstraintName("FK_tDanhMucSP_tQuocGia");

                    b.Navigation("MaChatLieuNavigation");

                    b.Navigation("MaDtNavigation");

                    b.Navigation("MaHangSxNavigation");

                    b.Navigation("MaLoaiNavigation");

                    b.Navigation("MaNuocSxNavigation");
                });

            modelBuilder.Entity("EcommerceWeb.Models.THoaDonBan", b =>
                {
                    b.HasOne("EcommerceWeb.Models.TKhachHang", "MaKhachHangNavigation")
                        .WithMany("THoaDonBans")
                        .HasForeignKey("MaKhachHang")
                        .HasConstraintName("FK_tHoaDonBan_tKhachHang");

                    b.HasOne("EcommerceWeb.Models.TNhanVien", "MaNhanVienNavigation")
                        .WithMany("THoaDonBans")
                        .HasForeignKey("MaNhanVien")
                        .HasConstraintName("FK_tHoaDonBan_tNhanVien");

                    b.Navigation("MaKhachHangNavigation");

                    b.Navigation("MaNhanVienNavigation");
                });

            modelBuilder.Entity("EcommerceWeb.Models.TKhachHang", b =>
                {
                    b.HasOne("EcommerceWeb.Models.TUser", "UsernameNavigation")
                        .WithMany("TKhachHangs")
                        .HasForeignKey("Username")
                        .HasConstraintName("FK_tKhachHang_tUser");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("EcommerceWeb.Models.TNhanVien", b =>
                {
                    b.HasOne("EcommerceWeb.Models.TUser", "UsernameNavigation")
                        .WithMany("TNhanViens")
                        .HasForeignKey("Username")
                        .HasConstraintName("FK_tNhanVien_tUser");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("EcommerceWeb.Models.TChatLieu", b =>
                {
                    b.Navigation("TDanhMucSps");
                });

            modelBuilder.Entity("EcommerceWeb.Models.TChiTietSanPham", b =>
                {
                    b.Navigation("TAnhChiTietSps");

                    b.Navigation("TChiTietHdbs");
                });

            modelBuilder.Entity("EcommerceWeb.Models.TDanhMucSp", b =>
                {
                    b.Navigation("TAnhSps");

                    b.Navigation("TChiTietSanPhams");
                });

            modelBuilder.Entity("EcommerceWeb.Models.THangSx", b =>
                {
                    b.Navigation("TDanhMucSps");
                });

            modelBuilder.Entity("EcommerceWeb.Models.THoaDonBan", b =>
                {
                    b.Navigation("TChiTietHdbs");
                });

            modelBuilder.Entity("EcommerceWeb.Models.TKhachHang", b =>
                {
                    b.Navigation("THoaDonBans");
                });

            modelBuilder.Entity("EcommerceWeb.Models.TKichThuoc", b =>
                {
                    b.Navigation("TChiTietSanPhams");
                });

            modelBuilder.Entity("EcommerceWeb.Models.TLoaiDt", b =>
                {
                    b.Navigation("TDanhMucSps");
                });

            modelBuilder.Entity("EcommerceWeb.Models.TLoaiSp", b =>
                {
                    b.Navigation("TDanhMucSps");
                });

            modelBuilder.Entity("EcommerceWeb.Models.TMauSac", b =>
                {
                    b.Navigation("TChiTietSanPhams");
                });

            modelBuilder.Entity("EcommerceWeb.Models.TNhanVien", b =>
                {
                    b.Navigation("THoaDonBans");
                });

            modelBuilder.Entity("EcommerceWeb.Models.TQuocGium", b =>
                {
                    b.Navigation("TDanhMucSps");
                });

            modelBuilder.Entity("EcommerceWeb.Models.TUser", b =>
                {
                    b.Navigation("TKhachHangs");

                    b.Navigation("TNhanViens");
                });
#pragma warning restore 612, 618
        }
    }
}
